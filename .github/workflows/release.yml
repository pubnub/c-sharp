name: Automated product release

on:
  pull_request:
    branches: [ master ]
    types: [ closed ]


jobs:
  check-release:
    name: Check release required
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.merged && endsWith(github.repository, '-private') != true }}
    outputs:
      release: ${{ steps.check.outputs.ready }}
    steps:
      - name: Checkout actions
        uses: actions/checkout@v2
        with:
          repository: pubnub/client-engineering-deployment-tools
          ref: v1
          token: ${{ secrets.GH_TOKEN }}
          path: .github/.release/actions
      - id: check
        name: Check pre-release completed
        uses: ./.github/.release/actions/actions/checks/release
        with:
          token: ${{ secrets.GH_TOKEN }}
  publish-nuget:
    name: Publish to NuGet
    runs-on: windows-latest
    needs: check-release
    if: ${{ needs.check-release.outputs.release == 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          # This should be the same as the one specified for on.pull_request.branches
          ref: master
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.3
      - name: Build packages
        run: |
          $RELEASES_PATH = "${{ github.workspace }}\.github\.release"
          mkdir "$RELEASES_PATH"
          mkdir "$RELEASES_PATH\Api"
          mkdir "$RELEASES_PATH\PCL"
          mkdir "$RELEASES_PATH\UWP"

          # Build Api package.
          cd "${{ github.workspace }}\src\Api\PubnubApi"
          dotnet pack -o "$RELEASES_PATH\Api" -c Release

          # Build PCL package.
          cd "${{ github.workspace }}\src\Api\PubnubApiPCL"
          dotnet pack -o "$RELEASES_PATH\PCL" -c Release

          # Build UWP package.
          cd "${{ github.workspace }}\src\Api\PubnubApiUWP"
          dotnet restore
          msbuild PubnubApiUWP.csproj /t:Pack /p:Configuration=Release /p:PackageOutputPath="$RELEASES_PATH\UWP" /v:n
      - name: Publish packages
        run: |
          $RELEASES_PATH = "${{ github.workspace }}\.github\.release"

          # Publish package
          $PACKAGE_NAME = Get-ChildItem -Name -Path "$RELEASES_PATH\Api\*" -Include *.nupkg
          $PACKAGE_PATH = "$RELEASES_PATH\Api\$PACKAGE_NAME"
          nuget.exe push $PACKAGE_PATH -Source "https://www.nuget.org" -ApiKey ${{ secrets.NUGET_API_KEY }}

          # Publish PCL package.
          $PCL_PACKAGE_NAME = Get-ChildItem -Name -Path "$RELEASES_PATH\PCL\*" -Include *.nupkg
          $PCL_PACKAGE_PATH = "$RELEASES_PATH\PCL\$PCL_PACKAGE_NAME"
          nuget.exe push $PCL_PACKAGE_PATH -Source "https://www.nuget.org" -ApiKey ${{ secrets.NUGET_API_KEY }}
          
          # Publish UWP package.
          $UWP_PACKAGE_NAME = Get-ChildItem -Name -Path "$RELEASES_PATH\UWP\*" -Include *.nupkg
          $UWP_PACKAGE_PATH = "$RELEASES_PATH\UWP\$UWP_PACKAGE_NAME"
          nuget.exe push $UWP_PACKAGE_PATH -Source "https://www.nuget.org" -ApiKey ${{ secrets.NUGET_API_KEY }}
  publish:
    name: Publish package
    runs-on: ubuntu-latest
    needs: check-release
    if: ${{ needs.check-release.outputs.release == 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          # This should be the same as the one specified for on.pull_request.branches
          ref: master
      - name: Checkout actions
        uses: actions/checkout@v2
        with:
          repository: pubnub/client-engineering-deployment-tools
          ref: v1
          token: ${{ secrets.GH_TOKEN }}
          path: .github/.release/actions
      - name: Create Release
        uses: ./.github/.release/actions/actions/services/github-release
        with:
          token: ${{ secrets.GH_TOKEN }}
          last-service: true